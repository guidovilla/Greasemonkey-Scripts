- cercare false value -> falsy e truthy
- togliere EL.title
- Entry_List più generica che non ha tt e getIdFromEntry ma getEntryData
- testare condizioni di errore per NF
- README in gitlab/GF/OUJS - esempi:
    https://greasyfork.org/en/scripts/1810-google-tracking-b-gone
    https://openuserjs.org/libs/Marti/GM_setStyle
    https://openuserjs.org/scripts/Marti/oujs_-_Meta_View
    vedere anche esempi di sizzle
- gv profile su GF e OUJS (bug reporting, vedere esempi fatti da altri)
- per le librerie: fare documentazione in GL/GH e GF/OUJS (vedere librerie tipo GM_Config come esempio)
- fare anche versione di parse CSV che sia "strict" RFC

- verificare come si comporta il salvataggio liste se non c'è utente (undefined? vd. YT)
- rifare check dell'interfaccia passando una lista di proprietà da controllare
- createfunction e createfunctionparam: fare e usare

- ottimizzare querySelector... con getElementsBy...
- sostituire for con altri iteratori - o viceversa per ottimizzazione
- valutare se usare GM_notification(), eventualmente al posto di alert, confirm, console
- aggiungere log.debug
- aggiustare logging errori (livello) e console con funzione che salva gli errori per andare a rivederli (con gm config ad es.) - in asincrono (polyfill?)
- usare addStyle e spostare in EL se utile (vedere dopo NF)
- header:
    aggiungere degli exclude
    connect per XHR
    resource usare
    altri header (vedere quelli in verde)
- le liste si possono scaricare con GM_XHR senza andare sulla pagina?

- valutare {} -> [] per output inLists
- usare GM_config (uno dei due):
    https://github.com/sizzlemctwizzle/GM_config
    https://greasyfork.org/en/scripts/1884-gm-config

- condividere info tra metadata block e readme/altri posti? Come? CI/CD?
  - todo
  - changelog
  - altre informazioni
- gruppo GF e/o OUJS (occhio che questo non può cambiare)
